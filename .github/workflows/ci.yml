name: CI

on:
  push:
  pull_request:
    branches:
      - main

jobs:
  mix_test:
    name: mix test (OTP ${{matrix.otp}} | Elixir ${{matrix.elixir}})

    strategy:
      matrix:
        include:
          - elixir: 1.13.4
            otp: 24.3

          - elixir: 1.15.4
            otp: 25.3
            lint: lint

          - elixir: 1.15.5
            otp: 26.0
            lint: lint

    runs-on: ubuntu-latest

    steps:
    - name: Install inotify-tools
      run: |
        sudo apt update
        sudo apt install -y inotify-tools
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: ${{ matrix.elixir }}
        otp-version: ${{ matrix.otp }}

    - name: Restore deps and _build cache
      uses: actions/cache@v2
      with:
        path: |
          deps
          _build
        key: deps-${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          deps-${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}

    - name: Install dependencies
      run: mix deps.get --only test

    #- name: Check source code format
    #  run: mix format --check-formatted
    #  if: ${{ matrix.lint }}

    - name: Remove compiled application files
      run: mix clean

    - name: Compile dependencies
      run: mix compile
      if: ${{ !matrix.lint }}
      env:
        MIX_ENV: test

    - name: Compile & lint dependencies
      run: mix compile --warnings-as-errors
      if: ${{ matrix.lint }}
      env:
        MIX_ENV: test

    - name: Run tests
      run: mix test

  npm_test:
    name: npm test

    strategy:
      matrix:
        include:
          - elixir: 1.13.2
            otp: 24.2

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}

      - name: Restore deps and _build cache
        uses: actions/cache@v2
        with:
          path: |
            deps
            _build
          key: deps-${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            deps-${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}

      - name: Install dependencies
        run: mix deps.get --only test

      - name: Set up Node.js 18.x
        uses: actions/setup-node@v1
        with:
          node-version: 18.x

      - name: Restore npm cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: npm install and test
        run: |
          cd assets
          npm install
          npm test

  e2e_test:
    name: e2e test

    strategy:
      matrix:
        include:
          - elixir: 1.16.0
            otp: 26.2

    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.41.0-jammy
    env:
      ImageOS: ubuntu22
      HOME: /root
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: install unzip
        run: apt update && apt -y install unzip

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}

      - name: Restore deps and _build cache
        uses: actions/cache@v2
        with:
          path: |
            deps
            _build
          key: deps-${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            deps-${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}

      - name: Install dependencies
        run: mix deps.get

      - name: Restore npm cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: npm install (assets)
        run: cd assets && npm install && cd ..

      - name: Build assets
        run: mix assets.build

      - name: Run e2e tests
        run: |
          npm install
          npm run e2e:test

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 7
